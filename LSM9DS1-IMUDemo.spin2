{                                                                                                           --------------------------------------------
    Filename: LSM9DS1-IMUDemo.spin2
    Author: Jesse Burt
    Description: Visual representation of IMU data output
        * LSM9DS1
    Copyright (c) 2022
    Started Sep 3, 2020
    Updated Sep 3, 2022
    See end of file for terms of use.
    --------------------------------------------
}
' Uncomment the line below to use the MikroE click board, and specify the base pin in the
'   CLICK_BASE line below
'#include "core.con.click.spin2"

CON

    _clkfreq    = cfg#_clkfreq_def
    _xtlfreq    = cfg#_xtlfreq

' -- User-modifiable constants
    SER_BAUD    = 2_000_000

    VGA_BASEPIN = 48                            ' 0, 8, 16, 24, 32, 40, 48, 56

    CLICK_BASE  = 0                             ' 0, 16, 32, 48

#ifndef MIKROE_CLICK
    { SPI configuration - build with -DLSM9DS1_SPI on the FlexSpin command line to use }
    CS_AG_PIN   = 0
    CS_M_PIN    = 1
    SCK_PIN     = 2                             ' SCL
    MOSI_PIN    = 3                             ' SDA / SDIO
    MISO_PIN    = 4                             ' SDO / SDIO
    ' NOTE: Set MOSI_PIN and MISO_PIN to the same pin to use 3-wire SPI
#endif
    SCK_FREQ    = 10_000_000                    ' 10MHz max

    { I2C configuration }
#ifndef MIKROE_CLICK
    SCL_PIN     = 0
    SDA_PIN     = 1
#endif
    I2C_FREQ    = 400_000                       ' 400kHz max
    ADDR_BITS   = 0                             ' 0, 1
' --

OBJ

    cfg     : "core.con.boardcfg.p2eval"
    imu     : "sensor.imu.9dof.lsm9ds1"

PUB main()

    vga.settimings(10, 33, 16, 96, 48, 640)
    setup()

    _imu_name := string("LSM9DS1")
#ifdef LSM9DS1_SPI
    if imu.startx(SCL_PIN, SDIO_PIN, CS_AG_PIN, CS_M_PIN, SCK_FREQ)
#else
    if imu.startx(SCL_PIN, SDA_PIN, I2C_FREQ, ADDR_BITS)
#endif
        ser.strln(@"LSM9DS1 driver started")
    else
        ser.strln(@"LSM9DS1 driver failed to start- halting")
        repeat

    imu.preset_active()

    demo()

PRI update_settings()

    imu.accelscale(_ascl)                                   ' 2, 4, 8, 16 (g's)
    imu.accelaxisenabled(%111)                              ' 0 or 1 for each bit (%xyz)
'    imu.accellowpassfilter(188)                             ' 5, 10, 20, 42, 98, 188

    imu.gyroscale(_gscl)                                    ' 250, 500, 1000, 2000
    imu.gyroaxisenabled(%111)                               ' 0 or 1 for each bit (%xyz)
'    imu.gyrolowpassfilter(5)                                ' 5, 10, 20, 42, 98, 188

    imu.magscale(_mscl)
    imu.magdatarate(80_000)

    _ascl := imu.accelscale()                               ' Read back settings from the sensor
    _gscl := imu.gyroscale()
    _mscl := imu.magscale()

#include "imu-demo-common.spin2h"

DAT
{
Copyright 2022 Jesse Burt

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute,
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or
substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT
OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}

